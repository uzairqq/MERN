export declare type Arity1<A, B> = (a: A) => B;
export declare type Arity2<A, B, C> = (a: A, b: B) => C;
export declare type Arity3<A, B, C, D> = (a: A, b: B, c: C) => D;
export declare type Arity4<A, B, C, D, E> = (a: A, b: B, c: C, d: D) => E;
export declare type Arity5<A, B, C, D, E, F> = (a: A, b: B, c: C, d: D, e: E) => F;
export interface Curry1<A, B> {
    (): Curry1<A, B>;
    (a: A): B;
}
export interface Curry2<A, B, C> {
    (): Curry2<A, B, C>;
    (a: A): Curry1<B, C>;
    (a: A, b: B): C;
}
export interface Curry3<A, B, C, D> {
    (): Curry3<A, B, C, D>;
    (a: A): Curry2<B, C, D>;
    (a: A, b: B): Curry1<C, D>;
    (a: A, b: B, c: C): D;
}
export interface Curry4<A, B, C, D, E> {
    (): Curry4<A, B, C, D, E>;
    (a: A): Curry3<B, C, D, E>;
    (a: A, b: B): Curry2<C, D, E>;
    (a: A, b: B, c: C): Curry1<D, E>;
    (a: A, b: B, c: C, d: D): E;
}
export interface Curry5<A, B, C, D, E, F> {
    (): Curry5<A, B, C, D, E, F>;
    (a: A): Curry4<B, C, D, E, F>;
    (a: A, b: B): Curry3<C, D, E, F>;
    (a: A, b: B, c: C): Curry2<D, E, F>;
    (a: A, b: B, c: C, d: D): Curry1<E, F>;
    (a: A, b: B, c: C, d: D, e: E): F;
}
